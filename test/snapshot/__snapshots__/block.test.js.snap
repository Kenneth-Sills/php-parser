// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`block check empty php blocks 1`] = `
Program {
  "children": Array [
    Inline {
      "kind": "inline",
      "leadingComments": Array [
        CommentBlock {
          "kind": "commentblock",
          "offset": 8,
          "value": "/**
   * Comment header
   */",
        },
      ],
      "raw": "
SOME HTML OUTPUT
",
      "trailingComments": Array [
        CommentBlock {
          "kind": "commentblock",
          "offset": 64,
          "value": "/* Inner comment */",
        },
      ],
      "value": "SOME HTML OUTPUT
",
    },
  ],
  "comments": Array [
    CommentBlock {
      "kind": "commentblock",
      "offset": 8,
      "value": "/**
   * Comment header
   */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 64,
      "value": "/* Inner comment */",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;

exports[`block check empty php file 1`] = `
Program {
  "children": Array [
    Noop {
      "kind": "noop",
      "leadingComments": Array [
        CommentBlock {
          "kind": "commentblock",
          "offset": 8,
          "value": "/**
   * Comment header
   */",
        },
      ],
    },
  ],
  "comments": Array [
    CommentBlock {
      "kind": "commentblock",
      "offset": 8,
      "value": "/**
   * Comment header
   */",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;

exports[`block empty class block 1`] = `
Program {
  "children": Array [
    Class {
      "body": Array [],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "foo",
        "trailingComments": Array [
          CommentBlock {
            "kind": "commentblock",
            "offset": 12,
            "value": "/* 1 */",
          },
        ],
      },
    },
  ],
  "comments": Array [
    CommentBlock {
      "kind": "commentblock",
      "offset": 12,
      "value": "/* 1 */",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;

exports[`block empty declare block 1`] = `
Program {
  "children": Array [
    Declare {
      "children": Array [
        Noop {
          "kind": "noop",
          "leadingComments": Array [
            CommentBlock {
              "kind": "commentblock",
              "offset": 18,
              "value": "/* 1 */",
            },
          ],
        },
      ],
      "directives": Array [
        DeclareDirective {
          "key": Identifier {
            "kind": "identifier",
            "name": "tick",
          },
          "kind": "declaredirective",
          "value": Number {
            "kind": "number",
            "value": "1",
          },
        },
      ],
      "kind": "declare",
      "mode": "block",
    },
  ],
  "comments": Array [
    CommentBlock {
      "kind": "commentblock",
      "offset": 18,
      "value": "/* 1 */",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;

exports[`block empty declare short form 1`] = `
Program {
  "children": Array [
    Declare {
      "children": Array [
        Noop {
          "kind": "noop",
          "leadingComments": Array [
            CommentBlock {
              "kind": "commentblock",
              "offset": 17,
              "value": "/* 1 */",
            },
          ],
        },
      ],
      "directives": Array [
        DeclareDirective {
          "key": Identifier {
            "kind": "identifier",
            "name": "tick",
          },
          "kind": "declaredirective",
          "value": Number {
            "kind": "number",
            "value": "1",
          },
        },
      ],
      "kind": "declare",
      "mode": "short",
    },
  ],
  "comments": Array [
    CommentBlock {
      "kind": "commentblock",
      "offset": 17,
      "value": "/* 1 */",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;

exports[`block empty function block 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [],
      "body": Block {
        "children": Array [
          Noop {
            "kind": "noop",
            "leadingComments": Array [
              CommentBlock {
                "kind": "commentblock",
                "offset": 17,
                "value": "/* 1 */",
              },
            ],
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "foo",
      },
      "nullable": false,
      "type": null,
    },
  ],
  "comments": Array [
    CommentBlock {
      "kind": "commentblock",
      "offset": 17,
      "value": "/* 1 */",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;

exports[`block empty method block 1`] = `
Program {
  "children": Array [
    Class {
      "body": Array [
        Method {
          "arguments": Array [],
          "body": Block {
            "children": Array [
              Noop {
                "kind": "noop",
                "leadingComments": Array [
                  CommentBlock {
                    "kind": "commentblock",
                    "offset": 30,
                    "value": "/* 1 */",
                  },
                ],
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "bar",
          },
          "nullable": false,
          "type": null,
          "visibility": "",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "foo",
      },
    },
  ],
  "comments": Array [
    CommentBlock {
      "kind": "commentblock",
      "offset": 30,
      "value": "/* 1 */",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;

exports[`block empty namespace block 1`] = `
Program {
  "children": Array [
    Namespace {
      "children": Array [
        Noop {
          "kind": "noop",
          "leadingComments": Array [
            CommentBlock {
              "kind": "commentblock",
              "offset": 16,
              "value": "/* 1 */",
            },
          ],
        },
      ],
      "kind": "namespace",
      "name": "foo",
      "withBrackets": true,
    },
  ],
  "comments": Array [
    CommentBlock {
      "kind": "commentblock",
      "offset": 16,
      "value": "/* 1 */",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;

exports[`block single 1`] = `
Program {
  "children": Array [
    Block {
      "children": Array [
        ExpressionStatement {
          "expression": Assign {
            "kind": "assign",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "var",
            },
            "operator": "=",
            "right": Number {
              "kind": "number",
              "value": "1",
            },
          },
          "kind": "expressionstatement",
        },
      ],
      "kind": "block",
    },
  ],
  "comments": Array [],
  "errors": Array [],
  "kind": "program",
}
`;
