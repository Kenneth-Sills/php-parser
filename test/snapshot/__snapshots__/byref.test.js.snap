// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`byref call result 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "byref": true,
              "curly": false,
              "kind": "variable",
              "name": "b",
            },
          ],
          "byref": true,
          "kind": "call",
          "what": ClassReference {
            "kind": "classreference",
            "name": "foo",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;

exports[`byref function definition 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [
        Parameter {
          "byref": true,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "bar",
          },
          "nullable": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "body": Block {
        "children": Array [],
        "kind": "block",
      },
      "byref": true,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "foo",
      },
      "nullable": false,
      "type": null,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;

exports[`byref new class 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "byref": true,
          "kind": "new",
          "what": ClassReference {
            "kind": "classreference",
            "name": "foo",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;

exports[`byref offset lookup 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": OffsetLookup {
        "kind": "offsetlookup",
        "offset": Variable {
          "byref": true,
          "curly": false,
          "kind": "variable",
          "name": "bar",
        },
        "what": Variable {
          "curly": false,
          "kind": "variable",
          "name": "foo",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;

exports[`byref return statement 1`] = `
Program {
  "children": Array [
    Return {
      "expr": Variable {
        "byref": true,
        "curly": false,
        "kind": "variable",
        "name": "foo",
      },
      "kind": "return",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;

exports[`byref static lookup 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": StaticLookup {
        "byref": true,
        "kind": "staticlookup",
        "offset": Variable {
          "curly": false,
          "kind": "variable",
          "name": "bar",
        },
        "what": ClassReference {
          "kind": "classreference",
          "name": "foo",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;

exports[`byref variable 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Variable {
        "byref": true,
        "curly": false,
        "kind": "variable",
        "name": "foo",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
